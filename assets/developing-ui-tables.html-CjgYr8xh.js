import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as e,o as t}from"./app-P8v0PDcj.js";const n="/img/ui_table_simple.png",l="/img/ui_table_2_level_head.png",h="/img/ui_table_styled.png",d="/img/ui_table_sorted.png",p={};function r(k,i){return t(),a("div",null,i[0]||(i[0]=[e(`<p><em>The html-table component is still experimental and may be subject to change. Cross-check with the actual code in the codebase (e.g., <code>zcl_abapgit_gui_page_codi_base</code> and its subclasses).</em></p><h2 id="general-concept-and-features" tabindex="-1"><a class="header-anchor" href="#general-concept-and-features"><span>General concept and features</span></a></h2><ul><li>Create an instance of <code>zcl_abapgit_html_table</code></li><li>Define column structure with <code>define_column</code></li><li>Render the component, supplying the data and the <em>renderer</em></li><li>While rendering, the html table instance will call the appropriate <em>renderer</em> methods for each row and cell, yet hiding all routine table construction inside</li></ul><h3 id="features" tabindex="-1"><a class="header-anchor" href="#features"><span>Features</span></a></h3><ul><li>styling individual cells and rows</li><li>auto-marking columns with <code>column_id</code> data attribute</li><li>sorting support</li></ul><h2 id="simplest-table-example" tabindex="-1"><a class="header-anchor" href="#simplest-table-example"><span>Simplest table example</span></a></h2><p>Suppose you have a table of this structure:</p><div class="language-abap line-numbers-mode" data-highlighter="shiki" data-ext="abap" data-title="abap" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  begin of</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ty_data,</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    id</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">   type</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;"> i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    name type</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;"> string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    city</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> type</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;"> string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  end of</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ty_data,</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Define the table structure:</p><ul><li><code>column_id</code> is the id to identify the column in further callbacks, in css styles, and also to be used as <em>default</em> field name to extract the value from a table record.</li><li><code>column_title</code> is a visual name of the html table column.</li></ul><div class="language-abap line-numbers-mode" data-highlighter="shiki" data-ext="abap" data-title="abap" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  li_table </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> zcl_abapgit_html_table=&gt;create(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    )-&gt;define_column(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      iv_column_id    </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;id&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      iv_column_title </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;ID&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    )-&gt;define_column(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      iv_column_id    </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;name&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      iv_column_title </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;Name&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    )-&gt;define_column(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      iv_column_id    </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;city&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      iv_column_title </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;Location&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ).</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Implement rendering methods <code>render_cell</code> and, optionally, <code>get_row_attrs</code>. This can be done directly in a calling component (typically), or in separate local classes (e.g. if there are several tables in the page).</p><div class="language-abap line-numbers-mode" data-highlighter="shiki" data-ext="abap" data-title="abap" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  method</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> zif_abapgit_html_table</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">~</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">render_cell</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    &quot; This is the simplest form of rendering</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    &quot; \`iv_value\` contains content of \`column_id\` field of table record</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    &quot; \`content\` attribute of the returning structure</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    &quot;  is the text value to be rendered in the cell</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    rs_render-content </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> |{ </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">iv_value</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> }|</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  endmethod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Finally, call the table <code>render</code> method to produce html. Pass the data table to be rendered and the <em>renderer</em> instance.</p><div class="language-abap line-numbers-mode" data-highlighter="shiki" data-ext="abap" data-title="abap" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  ri_html-&gt;add( li_table-&gt;render(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ii_renderer </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> me</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    it_data     </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ty_data_tab(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      ( </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">id</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;John&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    city </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;London&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> )</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      ( </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">id</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;Pierre&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  city </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;Paris&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> )</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ) ) ).</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+n+'" alt="Simplest table" tabindex="0" loading="lazy"><figcaption>Simplest table</figcaption></figure><h2 id="_2-level-header" tabindex="-1"><a class="header-anchor" href="#_2-level-header"><span>2-level header</span></a></h2><p>You can create groups of columns with <code>define_column_group</code>. See an example in <code>zcl_abapgit_gui_page_whereused</code> class. <code>title</code> and <code>id</code> are both options, but you have to start before the first column if you plan to use groups (because it calculates spans from start).</p><figure><img src="'+l+`" alt="2-level header" tabindex="0" loading="lazy"><figcaption>2-level header</figcaption></figure><h2 id="css-styles" tabindex="-1"><a class="header-anchor" href="#css-styles"><span>CSS styles</span></a></h2><p>There are several options to styling your table:</p><ul><li>First, you can pass the element id, and css class of the table itself to the <code>render</code> method.</li><li>Passing <code>iv_wrap_in_div</code> parameter will wrap your table in another <code>div</code> with the given css class name, primarily for visual styling purposes (e.g. see padded borders and rounded corners in the screenshot below).</li></ul><p>There are default CSS styles in abapGit to reuse if you don&#39;t want to bother with any specific styling - <code>default-table</code> and <code>default-table-container</code>, respectively, for the wrapping <code>div</code>.</p><div class="language-abap line-numbers-mode" data-highlighter="shiki" data-ext="abap" data-title="abap" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  ri_html-&gt;add( li_table-&gt;render(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    iv_wrap_in_div </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;default-table-container&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    iv_css_class   </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;default-table&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    iv_id          </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;my-addr-tab&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    it_data </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ... ).</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+h+`" alt="Styled table" tabindex="0" loading="lazy"><figcaption>Styled table</figcaption></figure><p>Rendering methods <code>render_cell</code> and <code>get_row_attrs</code> allow specifying css classes for individual cells and rows.</p><div class="language-abap line-numbers-mode" data-highlighter="shiki" data-ext="abap" data-title="abap" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  method</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> zif_abapgit_html_table</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">~</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">get_row_attrs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    rs_attrs-css_class </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;my-tab-row&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  endmethod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  method</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> zif_abapgit_html_table</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">~</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">render_cell</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    &quot; ...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    rs_render-css_class </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;my-cell&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  endmethod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Finally, passing the <code>iv_with_cids = abap_true</code> param to <code>render</code> will auto-mark cells with data attribute <code>data-cid</code> with respecting <code>column_id</code>. This enables easy indirect CSS styling or reassembling memory representation of the table in Javascript.</p><div class="language-abap line-numbers-mode" data-highlighter="shiki" data-ext="abap" data-title="abap" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  ri_html-&gt;add( li_table-&gt;render(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    iv_with_cids     </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> abap_true</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ... ).</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>get_row_attrs</code> also allows passing a custom data attribute. Similarly, this can be used in CSS styling or JS.</p><div class="language-abap line-numbers-mode" data-highlighter="shiki" data-ext="abap" data-title="abap" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  method</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> zif_abapgit_html_table</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">~</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">get_row_attrs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    rs_attrs-data-name </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;status&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    rs_attrs-data-value </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;error&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  endmethod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Resulting HTML:</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">table</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;my-addr-tab&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;default-table&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">thead</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">tr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">th</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> data-cid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;id&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;ID&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">th</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">th</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> data-cid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;name&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;Name&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">th</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">th</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> data-cid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;city&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;Location&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">th</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">tr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">thead</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">tbody</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">tr</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> data-status</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;error&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">td</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> data-cid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;id&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;1&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">td</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">td</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> data-cid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;name&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;John&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">td</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">td</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> data-cid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;city&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;London&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">td</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">tr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      ...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">tbody</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">table</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>CSS example:</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" data-title="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">table</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> td</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">data-cid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;id&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { font-weight: </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">bold</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; }</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">table</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> tr</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">data-kind</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;error&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { background-color: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">red</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>If you use 2-level header and pass <code>iv_group_id</code> it will also appear as a <code>data-gid</code> attribute in all relevant cells.</p><h2 id="cell-rendering" tabindex="-1"><a class="header-anchor" href="#cell-rendering"><span>Cell rendering</span></a></h2><p>You can define your column so that the <code>column_id</code> and the field to take a value from have different names. In the example below the <code>iv_value</code> in <code>render_cell</code> will be taken from the <code>person_id</code> field in the table structure.</p><div class="language-abap line-numbers-mode" data-highlighter="shiki" data-ext="abap" data-title="abap" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  li_table-&gt;define_column(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    iv_column_id    </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;id&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    iv_column_title </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;ID&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    iv_from_field   </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;person_id&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ).</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You are not obliged to use <code>iv_value</code> in <code>render_cell</code>. Among the parameters of <code>render_cell</code> and <code>get_row_attrs</code> you will find also:</p><ul><li><code>is_row</code> - full table record being processed, to access the data flexibly and/or conditionally</li><li><code>iv_row_index</code> - ... its index</li><li><code>iv_table_id</code> - table id passed to the <code>render</code> (in case you want to render several tables with the same <em>renderer</em> instance. Though it is generally not the best practice, better avoid it and create separate local classes for each renderer)</li><li><code>iv_column_id</code> - column id of the current table column (for <code>render_cell</code> only)</li></ul><p>Using the <code>html</code> attribute, you can return an instance of <code>zif_abapgit_html</code>. Use this if you want to return more complex HTML content.</p><div class="language-abap line-numbers-mode" data-highlighter="shiki" data-ext="abap" data-title="abap" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  method</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> zif_abapgit_html_table</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">~</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">render_cell</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    rs_render-html </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> zcl_abapgit_html=&gt;create( )-&gt;add_a( ... ).</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  endmethod</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="sorting" tabindex="-1"><a class="header-anchor" href="#sorting"><span>Sorting</span></a></h2><p><code>html_table</code> component does not manage sorting over the data itself but rather provides helpers to visualize it and process appropriate events. The sorting itself should be done externally.</p><figure><img src="`+d+`" alt="Sorted table" tabindex="0" loading="lazy"><figcaption>Sorted table</figcaption></figure><p>The sorting UI is triggered by passing <code>is_sorting_state</code> to the <code>render</code>. This is a structure consisting of two fields - <code>column_id</code> and <code>descending</code> value - which A) tells the component to visualize sorting B) tells which column is sorted and in which direction ( <code>descending = true/false</code> ).</p><p>In terms of CSS styles all sorting arrow are styled with <code>sort-arrow</code> class and the active one has additionally <code>sort-active</code> class. When designing an own CSS style, please don&#39;t create <code>.sort-arrow</code> names classes, but rather specify a more complete path <code>table.my-tab th span.sort-arrow</code> to avoid conflicts with the <code>default-table</code> style.</p><p>You can also pass <code>iv_sortable = abap_false</code> to <code>define_column</code> to remove the sorting possibility for a fiven column (by default all collumns are sortable).</p><p>Technical-wise sorting markers are links with events defined like <code>sapevent:sort_by:id:dsc</code> where <code>id</code> is a column id. This event must be properly processed in the host component. To simplify handling there is a helper method to identify and parse such an event. So the easiest way to handle sorting would be placing this code to the <code>on_event</code>:</p><div class="language-abap line-numbers-mode" data-highlighter="shiki" data-ext="abap" data-title="abap" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ls_sorting_request</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> zif_abapgit_html_table=&gt;ty_sorting_state.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  ls_sorting_request </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> zcl_abapgit_html_table=&gt;detect_sorting_request( ii_event-&gt;mv_action ).</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ls_sorting_request </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">is</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> not</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> initial</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ms_sorting_state </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ls_sorting_request.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    rs_handled-state </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> zcl_abapgit_gui=&gt;c_event_state-re_render.</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  endif</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>... and then applying the <code>ms_sorting_state</code> elsewhere before rendering the table</p><h3 id="in-table-sorting" tabindex="-1"><a class="header-anchor" href="#in-table-sorting"><span>In-table sorting</span></a></h3><p>This feature is <strong>experimental</strong>, use with care. See <code>zcl_abapgit_gui_page_whereused</code> as an example.</p><p>To simplify sorting handling you may create your table component as a class member, and pass <code>is_initial_sorting_state</code>.</p><div class="language-abap line-numbers-mode" data-highlighter="shiki" data-ext="abap" data-title="abap" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">DATA</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ls_sorting_state</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> TYPE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> zif_abapgit_html_table=&gt;ty_sorting_state.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">ls_sorting_state-column_id </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;xyz&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">mi_table </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> zcl_abapgit_html_table=&gt;create(</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  is_initial_sorting_state </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ls_sorting_state ).</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In the event handling method use <code>process_sorting_request</code> instead of <code>detect_sorting_request</code>.</p><div class="language-abap line-numbers-mode" data-highlighter="shiki" data-ext="abap" data-title="abap" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">IF</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> mi_table-&gt;process_sorting_request( ii_event-&gt;mv_action ) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> abap_true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  rs_handled-state </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> zcl_abapgit_gui=&gt;c_event_state-re_render.</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  RETURN</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">ENDIF</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>With this approach you will not need any other sorting logic to implement the table component will handle sorting for you. Please mind the caveats though:</p><ul><li>The <code>column_id</code> (or supplied <code>from_field</code>) <strong>must</strong> exist as a table field (for sortable columns)</li><li>To do the sorting the component creates a copy of the data internally. Mind memory consumption.</li></ul>`,60)]))}const g=s(p,[["render",r],["__file","developing-ui-tables.html.vue"]]),A=JSON.parse('{"path":"/development-guide/user-interface/developing-ui-tables.html","title":"HTML Tables","lang":"en-US","frontmatter":{"title":"HTML Tables","category":"ui","order":70,"description":"The html-table component is still experimental and may be subject to change. Cross-check with the actual code in the codebase (e.g., zcl_abapgit_gui_page_codi_base and its subcl...","head":[["meta",{"property":"og:url","content":"https://docs.abapgit.org/development-guide/user-interface/developing-ui-tables.html"}],["meta",{"property":"og:site_name","content":"abapGit Docs"}],["meta",{"property":"og:title","content":"HTML Tables"}],["meta",{"property":"og:description","content":"The html-table component is still experimental and may be subject to change. Cross-check with the actual code in the codebase (e.g., zcl_abapgit_gui_page_codi_base and its subcl..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://docs.abapgit.org/img/ui_table_simple.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-04-16T08:26:16.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-16T08:26:16.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"HTML Tables\\",\\"image\\":[\\"https://docs.abapgit.org/img/ui_table_simple.png\\",\\"https://docs.abapgit.org/img/ui_table_2_level_head.png\\",\\"https://docs.abapgit.org/img/ui_table_styled.png\\",\\"https://docs.abapgit.org/img/ui_table_sorted.png\\"],\\"dateModified\\":\\"2024-04-16T08:26:16.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"abapGit\\",\\"url\\":\\"https://github.com/abapGit\\"}]}"]]},"headers":[{"level":2,"title":"General concept and features","slug":"general-concept-and-features","link":"#general-concept-and-features","children":[{"level":3,"title":"Features","slug":"features","link":"#features","children":[]}]},{"level":2,"title":"Simplest table example","slug":"simplest-table-example","link":"#simplest-table-example","children":[]},{"level":2,"title":"2-level header","slug":"_2-level-header","link":"#_2-level-header","children":[]},{"level":2,"title":"CSS styles","slug":"css-styles","link":"#css-styles","children":[]},{"level":2,"title":"Cell rendering","slug":"cell-rendering","link":"#cell-rendering","children":[]},{"level":2,"title":"Sorting","slug":"sorting","link":"#sorting","children":[{"level":3,"title":"In-table sorting","slug":"in-table-sorting","link":"#in-table-sorting","children":[]}]}],"git":{"createdTime":1710824758000,"updatedTime":1713255976000,"contributors":[{"name":"Alexander Tsybulsky","username":"Alexander Tsybulsky","email":"sbcgua@users.noreply.github.com","commits":2,"url":"https://github.com/Alexander Tsybulsky"},{"name":"Marc Bernard","username":"Marc Bernard","email":"59966492+mbtools@users.noreply.github.com","commits":1,"url":"https://github.com/Marc Bernard"}]},"readingTime":{"minutes":4.15,"words":1246},"filePathRelative":"development-guide/user-interface/developing-ui-tables.md","localizedDate":"March 19, 2024","autoDesc":true,"excerpt":"<p><em>The html-table component is still experimental and may be subject to change. Cross-check with the actual code in the codebase (e.g., <code>zcl_abapgit_gui_page_codi_base</code> and its subclasses).</em></p>\\n<h2>General concept and features</h2>\\n<ul>\\n<li>Create an instance of <code>zcl_abapgit_html_table</code></li>\\n<li>Define column structure with <code>define_column</code></li>\\n<li>Render the component, supplying the data and the <em>renderer</em></li>\\n<li>While rendering, the html table instance will call the appropriate <em>renderer</em> methods for each row and cell, yet hiding all routine table construction inside</li>\\n</ul>"}');export{g as comp,A as data};
