import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as o,o as i}from"./app-BDaD5_a8.js";const r={};function n(s,e){return i(),a("div",null,e[0]||(e[0]=[o('<p>Packages with a class that implements <code>ZIF_APACK_MANIFEST</code> (the interface is automatically created at the initial start of abapGit) can define metadata that is interpreted by clients that support the APACK package and dependency management framework.</p><div class="hint-container info"><p class="hint-container-title">Info</p><p>APACK including dependencies is currently only supported by abapGit for ABAP Development Tools (ADT). Please also see the <a href="https://developers.sap.com/tutorials/abap-environment-abapgit.html" target="_blank" rel="noopener noreferrer">respective tutorial</a> for details.</p></div><p>Such an APACK implementation class must reside in the top-level ABAP package which is serialized by abapGit so that it can be detected properly. After the class is instantiated, it needs to have the field <code>ZIF_APACK_MANIFEST~DESCRIPTOR</code> populated with the respective APACK metadata.</p><p><strong>Note:</strong> Don&#39;t put any functionality in such implementation classes, only use them to advertise APACK metadata.</p><p>The metadata follows the <a href="https://maven.apache.org/pom.html#Maven_Coordinates" target="_blank" rel="noopener noreferrer">POM format by Apache Maven</a> and specifies additional information as well:</p><ul><li><code>group_id</code>: Unique name for your organization or project, e.g. <code>github.com/abapGit</code></li><li><code>artifact_id</code>: The name for the project, needs to be unique together with the specified <code>group_id</code>, e.g. <code>abapGit</code></li><li><code>version</code>: The version of your project, should adhere to the <a href="https://semver.org/" target="_blank" rel="noopener noreferrer">semantic versioning concept</a>, e.g. <code>1.85</code></li><li><code>repository_type</code>: Currently fixed to <code>abapGit</code> as it&#39;s currently the only supported repository type and is set automatically during serialization</li><li><code>git_url</code>: The URL where your main repository is located, e.g. <code>https://github.com/abapGit/abapGit.git</code></li><li><code>dependencies</code>: Optional, only needs to be filled if this project has dependencies to other projects. You only need to specify <code>group_id</code>, <code>artifact_id</code>, <code>version</code>, and <code>git_url</code> to identify the dependency. <code>target_package</code> is ignored during serialization. <strong>Note:</strong> Be sure to specify the <code>git_url</code> for each dependency properly as this is currently the only way how dependencies can automatically be resolved.</li></ul><p>If such an implementation class is detected during the serialization process, a corresponding <code>.apack-manifest.xml</code> file will be created on the top level of the Git repository. This contains the APACK metadata information.</p><h3 id="apack-in-namespaces" tabindex="-1"><a class="header-anchor" href="#apack-in-namespaces"><span>APACK in Namespaces</span></a></h3><p>If your project is using a namespace, then using <code>ZIF_APACK_MANIFEST</code> will not work (since it&#39;s not part of the namespace, obviously). Simply copy <code>ZIF_APACK_MANIFEST</code> to <code>/namespace/ZIF_APACK_MANIFEST</code> and use this interface in your APACK implementation class (requires abapGit v1.126.0 or higher).</p><h3 id="transporting-apack-implementation-classes" tabindex="-1"><a class="header-anchor" href="#transporting-apack-implementation-classes"><span>Transporting APACK implementation classes</span></a></h3><p>The interface <code>ZIF_APACK_MANIFEST</code> is automatically created as a local object, i.e. in package <code>$TMP</code>. If you intend to transport projects containing an implementation class to follow-on systems, you either need to remove the implementation class from the transport or ensure that <code>ZIF_APACK_MANIFEST</code> is available on each follow-on system to avoid syntax errors. So, either let abapGit create it in all systems (don&#39;t do that on production) or change the package assignment to a package with the same transport target as your projects and transport them together.</p><h3 id="examples" tabindex="-1"><a class="header-anchor" href="#examples"><span>Examples</span></a></h3><p>See the sample code on GitHub (uses <code>IF_APACK_MANIFEST</code> which is exclusively available on the SAP Cloud Platform ABAP Environment. However, the descriptor format is compatible with <code>ZIF_APACK_MANIFEST</code>.):</p><ul><li><a href="https://github.com/SAP/abap-platform-yy" target="_blank" rel="noopener noreferrer">YY Data Service</a></li><li><a href="https://github.com/SAP/abap-platform-jak" target="_blank" rel="noopener noreferrer">JSON ABAP Konverter</a> (specifies a dependency on the YY Data Service)</li></ul>',14)]))}const p=t(r,[["render",n],["__file","apack.html.vue"]]),d=JSON.parse('{"path":"/user-guide/reference/apack.html","title":"APACK","lang":"en-US","frontmatter":{"title":"APACK","category":"reference","order":88,"description":"Packages with a class that implements ZIF_APACK_MANIFEST (the interface is automatically created at the initial start of abapGit) can define metadata that is interpreted by clie...","head":[["meta",{"property":"og:url","content":"https://docs.abapgit.org/user-guide/reference/apack.html"}],["meta",{"property":"og:site_name","content":"abapGit Docs"}],["meta",{"property":"og:title","content":"APACK"}],["meta",{"property":"og:description","content":"Packages with a class that implements ZIF_APACK_MANIFEST (the interface is automatically created at the initial start of abapGit) can define metadata that is interpreted by clie..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-11-13T18:02:44.000Z"}],["meta",{"property":"article:modified_time","content":"2023-11-13T18:02:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"APACK\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-13T18:02:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"abapGit\\",\\"url\\":\\"https://github.com/abapGit\\"}]}"]]},"headers":[{"level":3,"title":"APACK in Namespaces","slug":"apack-in-namespaces","link":"#apack-in-namespaces","children":[]},{"level":3,"title":"Transporting APACK implementation classes","slug":"transporting-apack-implementation-classes","link":"#transporting-apack-implementation-classes","children":[]},{"level":3,"title":"Examples","slug":"examples","link":"#examples","children":[]}],"git":{"createdTime":1552372472000,"updatedTime":1699898564000,"contributors":[{"name":"Marc Bernard","username":"Marc Bernard","email":"59966492+mbtools@users.noreply.github.com","commits":1,"url":"https://github.com/Marc Bernard"},{"name":"Ludwig Stockbauer-Muhr","username":"Ludwig Stockbauer-Muhr","email":"35834861+stockbal@users.noreply.github.com","commits":1,"url":"https://github.com/Ludwig Stockbauer-Muhr"},{"name":"Lars Hvam","username":"Lars Hvam","email":"larshp@hotmail.com","commits":1,"url":"https://github.com/Lars Hvam"},{"name":"sandraros","username":"sandraros","email":"34005250+sandraros@users.noreply.github.com","commits":2,"url":"https://github.com/sandraros"},{"name":"Jaime Rodriguez Capote","username":"Jaime Rodriguez Capote","email":"jrodriguez@resultoconsultoria.com","commits":1,"url":"https://github.com/Jaime Rodriguez Capote"},{"name":"larshp","username":"larshp","email":"larshp@hotmail.com","commits":1,"url":"https://github.com/larshp"},{"name":"Sebastian Wolf","username":"Sebastian Wolf","email":"46522656+SebastianWolf-SAP@users.noreply.github.com","commits":2,"url":"https://github.com/Sebastian Wolf"}]},"readingTime":{"minutes":1.69,"words":506},"filePathRelative":"user-guide/reference/apack.md","localizedDate":"March 12, 2019","autoDesc":true,"excerpt":"<p>Packages with a class that implements <code>ZIF_APACK_MANIFEST</code> (the interface is automatically created at the initial start of abapGit) can define metadata that is interpreted by clients that support the APACK package and dependency management framework.</p>\\n<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">Info</p>\\n<p>APACK including dependencies is currently only supported by abapGit for ABAP Development Tools (ADT). Please also see the <a href=\\"https://developers.sap.com/tutorials/abap-environment-abapgit.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">respective tutorial</a> for details.</p>\\n</div>"}');export{p as comp,d as data};
