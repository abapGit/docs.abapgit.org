import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as r,o as i}from"./app-W-jXdfVZ.js";const o={};function n(s,e){return i(),a("div",null,e[0]||(e[0]=[r('<p>Using abapGit and abapGitServer for regular backup.</p><div class="hint-container info"><p class="hint-container-title">Info</p><p>Instead of abapGitServer, GitHub or similar can also be used.</p></div><h2 id="steps" tabindex="-1"><a class="header-anchor" href="#steps"><span>Steps</span></a></h2><ol><li><p>Install abapGit</p></li><li><p>Use abapGit to install <a href="https://github.com/larshp/abapGitServer" target="_blank" rel="noopener noreferrer">abapGitServer</a></p></li><li><p>Create repository in abapGitServer via the web interface</p></li><li><p>Clone the repository using abapGit, into the package that should be backed up. abapGit will not delete any objects in the package</p></li><li><p>Enable write protection</p></li><li><p>Test backup by staging + commit + pushing from abapGit manually</p></li><li><p>Configure &quot;background mode&quot; for the repository, Advanced -&gt; Background mode.</p><ul><li>Set to &quot;Automatic push, auto author&quot; this will find the user which last changed the objects and use these in the commits.</li><li>... or set to &quot;Automatic push, fixed author&quot; this will use the user of the background job</li><li>Enter username and password(note: password will be stored in clear text). If abapGit and abapGitServer runs on the same ABAP server, then no password is required, as it will automatically use logon tickets.</li></ul></li><li><p>On the background mode page: click &quot;Run background logic&quot; to test the setup works</p></li><li><p>Configure <code>ZABAPGIT</code> to run as a background job(<code>SM36</code>/<code>SM37</code>). Note: a dummy variant has to be created for the program, use <code>SE38</code> to create the variant, values in the variant are not used for anything in background mode.</p></li></ol><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>To restore only some objects, use &quot;Advanced &gt; Update Local Checksums&quot;</p></div>',5)]))}const u=t(o,[["render",n],["__file","regular-backup.html.vue"]]),c=JSON.parse('{"path":"/user-guide/other/regular-backup.html","title":"Regular Backup","lang":"en-US","frontmatter":{"title":"Regular Backup","category":"other","order":10,"description":"Using abapGit and abapGitServer for regular backup. Info Instead of abapGitServer, GitHub or similar can also be used. Steps Install abapGit Use abapGit to install abapGitServer...","head":[["meta",{"property":"og:url","content":"https://docs.abapgit.org/user-guide/other/regular-backup.html"}],["meta",{"property":"og:site_name","content":"abapGit Docs"}],["meta",{"property":"og:title","content":"Regular Backup"}],["meta",{"property":"og:description","content":"Using abapGit and abapGitServer for regular backup. Info Instead of abapGitServer, GitHub or similar can also be used. Steps Install abapGit Use abapGit to install abapGitServer..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-05-23T16:02:22.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-23T16:02:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Regular Backup\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-05-23T16:02:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"abapGit\\",\\"url\\":\\"https://github.com/abapGit\\"}]}"]]},"headers":[{"level":2,"title":"Steps","slug":"steps","link":"#steps","children":[]}],"git":{"createdTime":1684830205000,"updatedTime":1684857742000,"contributors":[{"name":"Marc Bernard","username":"Marc Bernard","email":"59966492+mbtools@users.noreply.github.com","commits":1,"url":"https://github.com/Marc Bernard"},{"name":"Ludwig Stockbauer-Muhr","username":"Ludwig Stockbauer-Muhr","email":"35834861+stockbal@users.noreply.github.com","commits":1,"url":"https://github.com/Ludwig Stockbauer-Muhr"}]},"readingTime":{"minutes":0.78,"words":235},"filePathRelative":"user-guide/other/regular-backup.md","localizedDate":"May 23, 2023","autoDesc":true,"excerpt":"<p>Using abapGit and abapGitServer for regular backup.</p>\\n<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">Info</p>\\n<p>Instead of abapGitServer, GitHub or similar can also be used.</p>\\n</div>\\n<h2>Steps</h2>\\n<ol>\\n<li>\\n<p>Install abapGit</p>\\n</li>\\n<li>\\n<p>Use abapGit to install <a href=\\"https://github.com/larshp/abapGitServer\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">abapGitServer</a></p>\\n</li>\\n<li>\\n<p>Create repository in abapGitServer via the web interface</p>\\n</li>\\n<li>\\n<p>Clone the repository using abapGit, into the package that should be backed up. abapGit will not delete any objects in the package</p>\\n</li>\\n<li>\\n<p>Enable write protection</p>\\n</li>\\n<li>\\n<p>Test backup by staging + commit + pushing from abapGit manually</p>\\n</li>\\n<li>\\n<p>Configure \\"background mode\\" for the repository, Advanced -&gt; Background mode.</p>\\n<ul>\\n<li>Set to \\"Automatic push, auto author\\" this will find the user which last changed the objects and use these in the commits.</li>\\n<li>... or set to \\"Automatic push, fixed author\\" this will use the user of the background job</li>\\n<li>Enter username and password(note: password will be stored in clear text). If abapGit and abapGitServer runs on the same ABAP server, then no password is required, as it will automatically use logon tickets.</li>\\n</ul>\\n</li>\\n<li>\\n<p>On the background mode page: click \\"Run background logic\\" to test the setup works</p>\\n</li>\\n<li>\\n<p>Configure <code>ZABAPGIT</code> to run as a background job(<code>SM36</code>/<code>SM37</code>). Note: a dummy variant has to be created for the program, use <code>SE38</code> to create the variant, values in the variant are not used for anything in background mode.</p>\\n</li>\\n</ol>"}');export{u as comp,c as data};
