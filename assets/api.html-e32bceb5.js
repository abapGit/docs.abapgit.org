import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as i,c,a,b as n,d as t,e as s}from"./app-843a223b.js";const l={},r=s(`<p>This page describes how to execute various abapGit tasks using your code.</p><div class="hint-container warning"><p class="hint-container-title">Note</p><p>These classes and methods have existed for quite some time and are stable.<br> However, they do <strong>not</strong> provide a guaranteed API. Future changes are a possibility.</p></div><h2 id="repositories" tabindex="-1"><a class="header-anchor" href="#repositories" aria-hidden="true">#</a> Repositories</h2><h3 id="create-online" tabindex="-1"><a class="header-anchor" href="#create-online" aria-hidden="true">#</a> Create Online</h3><p>Create a new abapGit repository for a given online project and branch and associate it with an SAP package:</p><div class="language-abap line-numbers-mode" data-ext="abap"><pre class="language-abap"><code><span class="token keyword">DATA</span><span class="token punctuation">(</span>lo_repo<span class="token punctuation">)</span> <span class="token operator">=</span> zcl_abapgit_repo_srv<span class="token token-operator punctuation">=&gt;</span>get_instance<span class="token punctuation">(</span> <span class="token punctuation">)</span>-&gt;new_online<span class="token punctuation">(</span>
  iv_url         <span class="token operator">=</span> lv_url
  iv_branch_name <span class="token operator">=</span> lv_branch_name <span class="token eol-comment comment">&quot; optional</span>
  iv_package     <span class="token operator">=</span> lv_package <span class="token punctuation">)</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Optional parameters correspond to the input fields of &quot;New Online&quot; in abapGit.</p><h3 id="create-offline" tabindex="-1"><a class="header-anchor" href="#create-offline" aria-hidden="true">#</a> Create Offline</h3><p>Create a new abapGit repository for an offline project and associate it with an SAP package:</p><div class="language-abap line-numbers-mode" data-ext="abap"><pre class="language-abap"><code><span class="token keyword">DATA</span><span class="token punctuation">(</span>lo_repo<span class="token punctuation">)</span> <span class="token operator">=</span> zcl_abapgit_repo_srv<span class="token token-operator punctuation">=&gt;</span>get_instance<span class="token punctuation">(</span> <span class="token punctuation">)</span>-&gt;new_offline<span class="token punctuation">(</span>
  iv_url     <span class="token operator">=</span> lv_name_of_repo   <span class="token eol-comment comment">&quot;not a URL</span>
  iv_package <span class="token operator">=</span> lv_package <span class="token punctuation">)</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Optional parameters correspond to the input fields of &quot;New Offline&quot; in abapGit.</p><h3 id="list" tabindex="-1"><a class="header-anchor" href="#list" aria-hidden="true">#</a> List</h3><p>Get a list of repository instances:</p><div class="language-abap line-numbers-mode" data-ext="abap"><pre class="language-abap"><code><span class="token eol-comment comment">&quot; All repositories</span>
<span class="token keyword">DATA</span><span class="token punctuation">(</span>lt_repos<span class="token punctuation">)</span> <span class="token operator">=</span> zcl_abapgit_repo_srv<span class="token token-operator punctuation">=&gt;</span>get_instance<span class="token punctuation">(</span> <span class="token punctuation">)</span>-&gt;list<span class="token punctuation">(</span> <span class="token punctuation">)</span><span class="token punctuation">.</span>

<span class="token eol-comment comment">&quot; Only offline repositories</span>
lt_repos <span class="token operator">=</span> zcl_abapgit_repo_srv<span class="token token-operator punctuation">=&gt;</span>get_instance<span class="token punctuation">(</span> <span class="token punctuation">)</span>-&gt;list<span class="token punctuation">(</span> iv_offline <span class="token operator">=</span> abap_true <span class="token punctuation">)</span><span class="token punctuation">.</span>

<span class="token eol-comment comment">&quot; Only online repositories</span>
lt_repos <span class="token operator">=</span> zcl_abapgit_repo_srv<span class="token token-operator punctuation">=&gt;</span>get_instance<span class="token punctuation">(</span> <span class="token punctuation">)</span>-&gt;list<span class="token punctuation">(</span> iv_offline <span class="token operator">=</span> abap_false <span class="token punctuation">)</span><span class="token punctuation">.</span>

<span class="token eol-comment comment">&quot; Only your favorite repositories (you can also use iv_offline as above)</span>
lt_repos <span class="token operator">=</span> zcl_abapgit_repo_srv<span class="token token-operator punctuation">=&gt;</span>get_instance<span class="token punctuation">(</span> <span class="token punctuation">)</span>-&gt;list_favorites<span class="token punctuation">(</span> <span class="token punctuation">)</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Get a structured list of all repositories with properties and local settings:</p><div class="language-abap line-numbers-mode" data-ext="abap"><pre class="language-abap"><code><span class="token keyword">DATA</span><span class="token punctuation">(</span>lt_list<span class="token punctuation">)</span> <span class="token operator">=</span> zcl_abapgit_persist_factory<span class="token token-operator punctuation">=&gt;</span>get_repo<span class="token punctuation">(</span> <span class="token punctuation">)</span>-&gt;list<span class="token punctuation">(</span> <span class="token punctuation">)</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="read" tabindex="-1"><a class="header-anchor" href="#read" aria-hidden="true">#</a> Read</h3><p>Get an instance of a repository:</p><div class="language-abap line-numbers-mode" data-ext="abap"><pre class="language-abap"><code><span class="token keyword">DATA</span><span class="token punctuation">(</span>lo_repo<span class="token punctuation">)</span> <span class="token operator">=</span> zcl_abapgit_repo_srv<span class="token token-operator punctuation">=&gt;</span>get_instance<span class="token punctuation">(</span> <span class="token punctuation">)</span>-&gt;get<span class="token punctuation">(</span> iv_key <span class="token punctuation">)</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Cast to online or offline repository:</p><div class="language-abap line-numbers-mode" data-ext="abap"><pre class="language-abap"><code><span class="token keyword">DATA</span> lo_repo_online <span class="token keyword">TYPE</span> <span class="token keyword">REF</span> <span class="token keyword">TO</span> zcl_abapgit_repo_online<span class="token punctuation">.</span>
lo_repo_online <span class="token operator">?=</span> lo_repo<span class="token punctuation">.</span>

<span class="token keyword">DATA</span> lo_repo_offline <span class="token keyword">TYPE</span> <span class="token keyword">REF</span> <span class="token keyword">TO</span> zcl_abapgit_repo_offline<span class="token punctuation">.</span>
lo_repo_offline <span class="token operator">?=</span> lo_repo<span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Get a structure containing all properties and local settings of a repository:</p><div class="language-abap line-numbers-mode" data-ext="abap"><pre class="language-abap"><code><span class="token keyword">DATA</span><span class="token punctuation">(</span>ls_repo<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">NEW</span> zcl_abapgit_persist_factory<span class="token token-operator punctuation">=&gt;</span>get_repo<span class="token punctuation">(</span> <span class="token punctuation">)</span>-&gt;read<span class="token punctuation">(</span> iv_key <span class="token punctuation">)</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="find" tabindex="-1"><a class="header-anchor" href="#find" aria-hidden="true">#</a> Find</h3><p>Find the repository for a given SAP package:</p><div class="language-abap line-numbers-mode" data-ext="abap"><pre class="language-abap"><code>zcl_abapgit_repo_srv<span class="token token-operator punctuation">=&gt;</span>get_instance<span class="token punctuation">(</span> <span class="token punctuation">)</span>-&gt;get_repo_from_package<span class="token punctuation">(</span>
  <span class="token keyword">EXPORTING</span>
    iv_package <span class="token operator">=</span> <span class="token string">&#39;$ABAPGIT&#39;</span>
  <span class="token keyword">IMPORTING</span>
    eo_repo    <span class="token operator">=</span> <span class="token keyword">DATA</span><span class="token punctuation">(</span>lo_repo<span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="delete" tabindex="-1"><a class="header-anchor" href="#delete" aria-hidden="true">#</a> Delete</h3><p>Remove an abapGit repository (the objects in SAP packages remain untouched):</p><div class="language-abap line-numbers-mode" data-ext="abap"><pre class="language-abap"><code>zcl_abapgit_repo_srv<span class="token token-operator punctuation">=&gt;</span>get_instance<span class="token punctuation">(</span> <span class="token punctuation">)</span>-&gt;delete<span class="token punctuation">(</span> lo_repo <span class="token punctuation">)</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="purge" tabindex="-1"><a class="header-anchor" href="#purge" aria-hidden="true">#</a> Purge</h3><p>Delete all objects that are part of an abapGit repository (i.e. full uninstall):</p><div class="language-abap line-numbers-mode" data-ext="abap"><pre class="language-abap"><code>ls_checks <span class="token operator">=</span> lo_repo<span class="token token-operator punctuation">-&gt;</span>delete_checks<span class="token punctuation">(</span> <span class="token punctuation">)</span><span class="token punctuation">.</span>
<span class="token keyword">IF</span> ls_checks<span class="token token-operator punctuation">-</span>transport<span class="token token-operator punctuation">-</span>required <span class="token operator">=</span> abap_true<span class="token punctuation">.</span>
  ls_checks<span class="token token-operator punctuation">-</span>transport<span class="token token-operator punctuation">-</span>transport <span class="token operator">=</span> <span class="token string">&#39;SIDK900000&#39;</span><span class="token punctuation">.</span> <span class="token eol-comment comment">&quot;transport request</span>
<span class="token keyword">ENDIF</span><span class="token punctuation">.</span>

zcl_abapgit_repo_srv<span class="token token-operator punctuation">=&gt;</span>get_instance<span class="token punctuation">(</span> <span class="token punctuation">)</span>-&gt;purge<span class="token punctuation">(</span>
  io_repo  <span class="token operator">=</span> lo_repo
  is_check <span class="token operator">=</span> ls_check <span class="token punctuation">)</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="status" tabindex="-1"><a class="header-anchor" href="#status" aria-hidden="true">#</a> Status</h3><p>Get the status of all files included in a repository:</p><div class="language-abap line-numbers-mode" data-ext="abap"><pre class="language-abap"><code><span class="token keyword">DATA</span><span class="token punctuation">(</span>lt_result<span class="token punctuation">)</span> <span class="token operator">=</span> zcl_abapgit_repo_status<span class="token token-operator punctuation">=&gt;</span>calculate<span class="token punctuation">(</span> lo_repo <span class="token punctuation">)</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><h2 id="online-repository" tabindex="-1"><a class="header-anchor" href="#online-repository" aria-hidden="true">#</a> Online Repository</h2><p>The following tasks are supported for online repositories only (<code>lo_repo type ref to zcl_abapgit_repo_online</code>).</p>`,38),u=a("strong",null,"Note:",-1),d={href:"https://github.com/abapGit/abapGit/issues/1331",target:"_blank",rel:"noopener noreferrer"},k=s(`<div class="language-abap line-numbers-mode" data-ext="abap"><pre class="language-abap"><code>zcl_abapgit_login_manager<span class="token token-operator punctuation">=&gt;</span>set<span class="token punctuation">(</span>
  iv_uri      <span class="token operator">=</span> lo_repo<span class="token token-operator punctuation">-&gt;</span>get_url<span class="token punctuation">(</span> <span class="token punctuation">)</span>
  iv_username <span class="token operator">=</span> lv_username
  iv_password <span class="token operator">=</span> lv_password <span class="token punctuation">)</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Or you can include the abapGit password dialog into your custom programs with this code</p><div class="language-abap line-numbers-mode" data-ext="abap"><pre class="language-abap"><code><span class="token keyword">TABLES</span><span class="token punctuation">:</span> sscrfields<span class="token punctuation">.</span>

<span class="token keyword">INCLUDE</span> zabapgit_password_dialog<span class="token punctuation">.</span>

<span class="token keyword">INITIALIZATION</span><span class="token punctuation">.</span>
  lcl_password_dialog<span class="token token-operator punctuation">=&gt;</span>on_screen_init<span class="token punctuation">(</span> <span class="token punctuation">)</span><span class="token punctuation">.</span>

<span class="token keyword">AT</span> <span class="token keyword">SELECTION-SCREEN</span> <span class="token keyword">OUTPUT</span><span class="token punctuation">.</span>
  <span class="token keyword">IF</span> sy<span class="token token-operator punctuation">-</span>dynnr <span class="token operator">=</span> lcl_password_dialog<span class="token token-operator punctuation">=&gt;</span>c_dynnr<span class="token punctuation">.</span>
    lcl_password_dialog<span class="token token-operator punctuation">=&gt;</span>on_screen_output<span class="token punctuation">(</span> <span class="token punctuation">)</span><span class="token punctuation">.</span>
  <span class="token keyword">ENDIF</span><span class="token punctuation">.</span>

<span class="token keyword">AT</span> <span class="token keyword">SELECTION-SCREEN</span><span class="token punctuation">.</span>
  <span class="token keyword">IF</span> sy<span class="token token-operator punctuation">-</span>dynnr <span class="token operator">=</span> lcl_password_dialog<span class="token token-operator punctuation">=&gt;</span>c_dynnr<span class="token punctuation">.</span>
    lcl_password_dialog<span class="token token-operator punctuation">=&gt;</span>on_screen_event<span class="token punctuation">(</span> sscrfields<span class="token token-operator punctuation">-</span>ucomm <span class="token punctuation">)</span><span class="token punctuation">.</span>
  <span class="token keyword">ENDIF</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="list-branches" tabindex="-1"><a class="header-anchor" href="#list-branches" aria-hidden="true">#</a> List Branches</h3><p>Get a list of all branches (including <code>main</code> branch):</p><div class="language-abap line-numbers-mode" data-ext="abap"><pre class="language-abap"><code>lo_branches <span class="token operator">=</span> zcl_abapgit_git_transport<span class="token token-operator punctuation">=&gt;</span>branches<span class="token punctuation">(</span> lo_repo<span class="token token-operator punctuation">-&gt;</span>get_url<span class="token punctuation">(</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">.</span>
lt_list <span class="token operator">=</span> lo_branches<span class="token token-operator punctuation">-&gt;</span>get_branches_only<span class="token punctuation">(</span> <span class="token punctuation">)</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="switch-branch" tabindex="-1"><a class="header-anchor" href="#switch-branch" aria-hidden="true">#</a> Switch Branch</h3><p>Switch the abapGit repository to a different branch:</p><div class="language-abap line-numbers-mode" data-ext="abap"><pre class="language-abap"><code>lo_repo<span class="token token-operator punctuation">-&gt;</span>set_branch_name<span class="token punctuation">(</span> lv_name <span class="token punctuation">)</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="create-branch" tabindex="-1"><a class="header-anchor" href="#create-branch" aria-hidden="true">#</a> Create Branch</h3><p>Create a new branch in an online repository, note that IV_FROM can also be set, if not the branch will be created from the currently checked-out commit of the repo,</p><div class="language-abap line-numbers-mode" data-ext="abap"><pre class="language-abap"><code>lo_repo<span class="token token-operator punctuation">-&gt;</span>create_branch<span class="token punctuation">(</span> lv_name <span class="token punctuation">)</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="delete-branch" tabindex="-1"><a class="header-anchor" href="#delete-branch" aria-hidden="true">#</a> Delete Branch</h3><p>Delete a branch of an online repository:</p><div class="language-abap line-numbers-mode" data-ext="abap"><pre class="language-abap"><code>lo_branches <span class="token operator">=</span> zcl_abapgit_git_transport<span class="token token-operator punctuation">=&gt;</span>branches<span class="token punctuation">(</span> lo_repo<span class="token token-operator punctuation">-&gt;</span>get_url<span class="token punctuation">(</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">.</span>
ls_branch <span class="token operator">=</span> lo_branches<span class="token token-operator punctuation">-&gt;</span>find_by_name<span class="token punctuation">(</span> lv_name <span class="token punctuation">)</span><span class="token punctuation">.</span>

zcl_abapgit_git_porcelain<span class="token token-operator punctuation">=&gt;</span>delete_branch<span class="token punctuation">(</span>
  iv_url    <span class="token operator">=</span> lo_repo<span class="token token-operator punctuation">-&gt;</span>get_url<span class="token punctuation">(</span> <span class="token punctuation">)</span>
  is_branch <span class="token operator">=</span> ls_branch <span class="token punctuation">)</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="push-changes" tabindex="-1"><a class="header-anchor" href="#push-changes" aria-hidden="true">#</a> Push Changes</h3><p>Push changes to an online repository:</p><div class="language-abap line-numbers-mode" data-ext="abap"><pre class="language-abap"><code><span class="token keyword">CREATE</span> <span class="token keyword">OBJECT</span> li_log <span class="token keyword">TYPE</span> zcl_abapgit_log<span class="token punctuation">.</span>
<span class="token keyword">CREATE</span> <span class="token keyword">OBJECT</span> li_background <span class="token keyword">TYPE</span> zcl_abapgit_background_push_au<span class="token punctuation">.</span> <span class="token eol-comment comment">&quot; or push_fi</span>

li_background<span class="token token-operator punctuation">-&gt;</span>run<span class="token punctuation">(</span>
  io_repo     <span class="token operator">=</span> lo_repo
  ii_log      <span class="token operator">=</span> li_log
  it_settings <span class="token operator">=</span> lt_settings <span class="token punctuation">)</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18),v=a("code",null,"zif_abapgit_background",-1),b=a("br",null,null,-1),_={href:"https://github.com/abapGit/abapGit/tree/main/src/background",target:"_blank",rel:"noopener noreferrer"},m=s(`<p>Alternative 2: Use the following code to add files to staging and push them to the repository.</p><div class="language-abap line-numbers-mode" data-ext="abap"><pre class="language-abap"><code><span class="token keyword">METHOD</span> stage_and_push<span class="token punctuation">.</span>

  <span class="token keyword">DATA</span><span class="token punctuation">:</span> lo_repo  <span class="token keyword">TYPE</span> <span class="token keyword">REF</span> <span class="token keyword">TO</span> zcl_abapgit_repo_online<span class="token punctuation">,</span>
        ls_comment <span class="token keyword">TYPE</span> zif_abapgit_definitions<span class="token token-operator punctuation">=&gt;</span>ty_comment<span class="token punctuation">,</span>
        lo_stage <span class="token keyword">TYPE</span> <span class="token keyword">REF</span> <span class="token keyword">TO</span> zcl_abapgit_stage<span class="token punctuation">.</span>

  lo_repo <span class="token operator">?=</span> zcl_abapgit_repo_srv<span class="token token-operator punctuation">=&gt;</span>get_instance<span class="token punctuation">(</span> <span class="token punctuation">)</span>-&gt;get<span class="token punctuation">(</span> iv_key <span class="token punctuation">)</span><span class="token punctuation">.</span>

  <span class="token keyword">CREATE</span> <span class="token keyword">OBJECT</span> lo_stage<span class="token punctuation">.</span>
  
  <span class="token keyword">DATA</span><span class="token punctuation">(</span>ls_files<span class="token punctuation">)</span> <span class="token operator">=</span> zcl_abapgit_factory<span class="token token-operator punctuation">=&gt;</span>get_stage_logic<span class="token punctuation">(</span> <span class="token punctuation">)</span>-&gt;get<span class="token punctuation">(</span> lo_repo <span class="token punctuation">)</span><span class="token punctuation">.</span>

  <span class="token keyword">LOOP</span> <span class="token keyword">AT</span> ls_files<span class="token token-operator punctuation">-</span>local <span class="token keyword">ASSIGNING</span> <span class="token keyword">FIELD-SYMBOL</span><span class="token punctuation">(</span>&lt;ls_local&gt;<span class="token punctuation">)</span><span class="token punctuation">.</span>
    lo_stage<span class="token token-operator punctuation">-&gt;</span>add<span class="token punctuation">(</span>
      iv_path     <span class="token operator">=</span> &lt;ls_local&gt;-file<span class="token token-operator punctuation">-</span>path
      iv_filename <span class="token operator">=</span> &lt;ls_local&gt;-file<span class="token token-operator punctuation">-</span>filename
      iv_data     <span class="token operator">=</span> &lt;ls_local&gt;-file<span class="token token-operator punctuation">-</span>data <span class="token punctuation">)</span><span class="token punctuation">.</span>
  <span class="token keyword">ENDLOOP</span><span class="token punctuation">.</span>  

  <span class="token keyword">DATA</span><span class="token punctuation">(</span>lo_user<span class="token punctuation">)</span> <span class="token operator">=</span> zcl_abapgit_user_record<span class="token token-operator punctuation">=&gt;</span>get_instance<span class="token punctuation">(</span> sy<span class="token token-operator punctuation">-</span>uname <span class="token punctuation">)</span><span class="token punctuation">.</span>

  ls_comment<span class="token token-operator punctuation">-</span>committer<span class="token token-operator punctuation">-</span>name  <span class="token operator">=</span> lo_user<span class="token token-operator punctuation">-&gt;</span>get_name<span class="token punctuation">(</span> <span class="token punctuation">)</span><span class="token punctuation">.</span>
  ls_comment<span class="token token-operator punctuation">-</span>committer<span class="token token-operator punctuation">-</span>email <span class="token operator">=</span> lo_user<span class="token token-operator punctuation">-&gt;</span>get_email<span class="token punctuation">(</span> <span class="token punctuation">)</span><span class="token punctuation">.</span>
  ls_comment<span class="token token-operator punctuation">-</span>comment         <span class="token operator">=</span> <span class="token string">&#39;My Commit&#39;</span><span class="token punctuation">.</span>
  
  lo_repo<span class="token token-operator punctuation">-&gt;</span>push<span class="token punctuation">(</span> is_comment <span class="token operator">=</span> ls_comment
                 io_stage   <span class="token operator">=</span> lo_stage <span class="token punctuation">)</span><span class="token punctuation">.</span>
  
<span class="token keyword">ENDMETHOD</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="pull-changes" tabindex="-1"><a class="header-anchor" href="#pull-changes" aria-hidden="true">#</a> Pull Changes</h3><p>Pull changes from an online repository:</p><div class="language-abap line-numbers-mode" data-ext="abap"><pre class="language-abap"><code><span class="token keyword">CREATE</span> <span class="token keyword">OBJECT</span> li_log <span class="token keyword">TYPE</span> zcl_abapgit_log<span class="token punctuation">.</span>
<span class="token keyword">CREATE</span> <span class="token keyword">OBJECT</span> li_background <span class="token keyword">TYPE</span> zcl_abapgit_background_pull<span class="token punctuation">.</span>

li_background<span class="token token-operator punctuation">-&gt;</span>run<span class="token punctuation">(</span>
  io_repo     <span class="token operator">=</span> lo_repo
  ii_log      <span class="token operator">=</span> li_log
  it_settings <span class="token operator">=</span> lt_settings <span class="token punctuation">)</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),g=a("code",null,"zif_abapgit_background",-1),h=a("br",null,null,-1),f={href:"https://github.com/abapGit/abapGit/tree/main/src/background",target:"_blank",rel:"noopener noreferrer"},y=s(`<p>Alternative 2: Use the following code to trigger the pull.</p><div class="language-abap line-numbers-mode" data-ext="abap"><pre class="language-abap"><code><span class="token keyword">METHOD</span> pull<span class="token punctuation">.</span>

  <span class="token keyword">DATA</span><span class="token punctuation">:</span> lo_repo   <span class="token keyword">TYPE</span> <span class="token keyword">REF</span> <span class="token keyword">TO</span> zcl_abapgit_repo_online<span class="token punctuation">,</span>
        li_log    <span class="token keyword">TYPE</span> <span class="token keyword">REF</span> <span class="token keyword">TO</span> zif_abapgit_log<span class="token punctuation">,</span>
        ls_checks <span class="token keyword">TYPE</span> zif_abapgit_definitions<span class="token token-operator punctuation">=&gt;</span>ty_deserialize_checks<span class="token punctuation">.</span>

  <span class="token keyword">CREATE</span> <span class="token keyword">OBJECT</span> li_log <span class="token keyword">TYPE</span> zcl_abapgit_log<span class="token punctuation">.</span>

  lo_repo <span class="token operator">?=</span> zcl_abapgit_repo_srv<span class="token token-operator punctuation">=&gt;</span>get_instance<span class="token punctuation">(</span> <span class="token punctuation">)</span>-&gt;get<span class="token punctuation">(</span> iv_key <span class="token punctuation">)</span><span class="token punctuation">.</span>

  ls_checks <span class="token operator">=</span> lo_repo<span class="token token-operator punctuation">-&gt;</span>deserialize_checks<span class="token punctuation">(</span> <span class="token punctuation">)</span><span class="token punctuation">.</span>

<span class="token comment">* the code must decide what to do with warnings, see example below</span>
  ls_checks <span class="token operator">=</span> decisions<span class="token punctuation">(</span> ls_checks <span class="token punctuation">)</span><span class="token punctuation">.</span>

  lo_repo<span class="token token-operator punctuation">-&gt;</span>deserialize<span class="token punctuation">(</span>
    is_checks <span class="token operator">=</span> ls_checks
    ii_log    <span class="token operator">=</span> li_log <span class="token punctuation">)</span><span class="token punctuation">.</span>

<span class="token keyword">ENDMETHOD</span><span class="token punctuation">.</span>

<span class="token keyword">METHOD</span> decisions<span class="token punctuation">.</span>

<span class="token comment">* this part can be handled by presenting the warings to the user in UI, or set via logic in code</span>
<span class="token comment">* this is an example, adjust to fit your business requirements</span>

  rs_checks <span class="token operator">=</span> is_checks<span class="token punctuation">.</span>

  <span class="token keyword">LOOP</span> <span class="token keyword">AT</span> rs_checks<span class="token token-operator punctuation">-</span>overwrite <span class="token keyword">ASSIGNING</span> <span class="token keyword">FIELD-SYMBOL</span><span class="token punctuation">(</span>&lt;ls_overwrite&gt;<span class="token punctuation">)</span><span class="token punctuation">.</span>
<span class="token comment">* Object has been modified locally</span>
<span class="token comment">* decision field must be filled with Y or N. Y overwrites the object</span>
    &lt;ls_overwrite&gt;-decision <span class="token operator">=</span> <span class="token string">&#39;Y&#39;</span><span class="token punctuation">.</span>
  <span class="token keyword">ENDLOOP</span><span class="token punctuation">.</span>

  <span class="token keyword">LOOP</span> <span class="token keyword">AT</span> rs_checks<span class="token token-operator punctuation">-</span>warning_package <span class="token keyword">ASSIGNING</span> <span class="token keyword">FIELD-SYMBOL</span><span class="token punctuation">(</span>&lt;ls_warning_package&gt;<span class="token punctuation">)</span><span class="token punctuation">.</span>
<span class="token comment">* Y or N if object from unexpected package should be overwritten</span>
    &lt;ls_warning_package&gt;-decision <span class="token operator">=</span> <span class="token string">&#39;Y&#39;</span><span class="token punctuation">.</span>
  <span class="token keyword">ENDLOOP</span><span class="token punctuation">.</span>

  <span class="token keyword">IF</span> rs_checks<span class="token token-operator punctuation">-</span>requirements<span class="token token-operator punctuation">-</span>met <span class="token operator">=</span> <span class="token string">&#39;N&#39;</span><span class="token punctuation">.</span>
<span class="token comment">* code must decide if deserialization should continue or not</span>
    rs_checks<span class="token token-operator punctuation">-</span>requirements<span class="token token-operator punctuation">-</span>decision <span class="token operator">=</span> <span class="token string">&#39;Y&#39;</span><span class="token punctuation">.</span>
  <span class="token keyword">ENDIF</span><span class="token punctuation">.</span>

  <span class="token keyword">IF</span> rs_checks<span class="token token-operator punctuation">-</span>transport<span class="token token-operator punctuation">-</span>required <span class="token operator">=</span> abap_true<span class="token punctuation">.</span>
    rs_checks<span class="token token-operator punctuation">-</span>transport<span class="token token-operator punctuation">-</span>transport <span class="token operator">=</span> <span class="token string">&#39;SIDK900000&#39;</span><span class="token punctuation">.</span> <span class="token eol-comment comment">&quot;transport request</span>
  <span class="token keyword">ENDIF</span><span class="token punctuation">.</span>

<span class="token keyword">ENDMETHOD</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="offline-repository" tabindex="-1"><a class="header-anchor" href="#offline-repository" aria-hidden="true">#</a> Offline Repository</h2><p>The following tasks are supported for offline repositories only (<code>lo_repo type ref to zcl_abapgit_repo_offline</code>).</p><h3 id="import-zip" tabindex="-1"><a class="header-anchor" href="#import-zip" aria-hidden="true">#</a> Import ZIP</h3><p>Upload a ZIP file from frontend to an offline repository:</p><div class="language-abap line-numbers-mode" data-ext="abap"><pre class="language-abap"><code>lv_xstr <span class="token operator">=</span> zcl_abapgit_ui_factory<span class="token token-operator punctuation">=&gt;</span>get_frontend_services<span class="token punctuation">(</span> <span class="token punctuation">)</span>-&gt;file_upload<span class="token punctuation">(</span> lv_file_with_path <span class="token punctuation">)</span><span class="token punctuation">.</span>

lo_repo<span class="token token-operator punctuation">-&gt;</span>set_files_remote<span class="token punctuation">(</span> zcl_abapgit_zip<span class="token token-operator punctuation">=&gt;</span>load<span class="token punctuation">(</span> lv_xstr <span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">.</span>
zcl_abapgit_services_repo<span class="token token-operator punctuation">=&gt;</span>refresh<span class="token punctuation">(</span> lv_key <span class="token punctuation">)</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="export-zip" tabindex="-1"><a class="header-anchor" href="#export-zip" aria-hidden="true">#</a> Export ZIP</h3><p>Download a ZIP file of an offline repository to frontend:</p><div class="language-abap line-numbers-mode" data-ext="abap"><pre class="language-abap"><code>lv_xstr <span class="token operator">=</span> zcl_abapgit_zip<span class="token token-operator punctuation">=&gt;</span>export<span class="token punctuation">(</span> lo_repo <span class="token punctuation">)</span><span class="token punctuation">.</span>

zcl_abapgit_ui_factory<span class="token token-operator punctuation">=&gt;</span>get_frontend_services<span class="token punctuation">(</span> <span class="token punctuation">)</span>-&gt;file_download<span class="token punctuation">(</span>
  iv_path <span class="token operator">=</span> lv_file_with_path
  iv_xstr <span class="token operator">=</span> lv_xstr <span class="token punctuation">)</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="progress-indicator" tabindex="-1"><a class="header-anchor" href="#progress-indicator" aria-hidden="true">#</a> Progress Indicator</h2><p>The default progress indicator shows progress in SAP GUI, however, it is possible to inject a custom progress indicator via <code>ZCL_ABAPGIT_PROGRESS=&gt;SET_INSTANCE</code> which can catch the status in non-SAP GUI scenarios.</p>`,14);function w(E,T){const e=p("ExternalLinkIcon");return i(),c("div",null,[r,a("p",null,[u,n(" Certain tasks will require authentication (user/password or token). In such cases, you will have to provide the login details upfront (see "),a("a",d,[n("#1331"),t(e)]),n(" for details), authentication can also be set via user exit or configured in SM59,")]),k,a("p",null,[n("Alternative 1: implement your logic using interface "),v,n(" (see"),b,a("a",_,[n("Background Package"),t(e)]),n(" for details).")]),m,a("p",null,[n("Alternative 1: implement your logic using interface "),g,n(" (see"),h,a("a",f,[n("Background Package"),t(e)]),n(" for details).")]),y])}const z=o(l,[["render",w],["__file","api.html.vue"]]);export{z as default};
