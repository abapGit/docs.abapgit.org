import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,a as o,b as t,d as i,e as r,f as s,r as p,o as d}from"./app-BSMtq9LD.js";const u={},m={class:"hint-container warning"},f={start:"4"};function c(h,e){const a=p("RouteLink");return d(),l("div",null,[e[14]||(e[14]=o('<h2 id="task-list-for-new-serializers" tabindex="-1"><a class="header-anchor" href="#task-list-for-new-serializers"><span>Task List for New Serializers</span></a></h2><p>The following list includes the mandatory and recommended tasks for adding a new serializer to abapGit:</p><ol><li><p>Check <a href="https://github.com/abapGit/abapGit/issues/5912" target="_blank" rel="noopener noreferrer">Support for New Object Types</a></p><p>If the object type is listed already (and not implemented), check the corresponding issue. Typically, you will find valuable discussions to continue or previous work to use as a starting point.</p><p>If the object type is not included in the list, create an <a href="https://github.com/abapGit/abapGit/issues/new" target="_blank" rel="noopener noreferrer">issue</a> with the title &quot;&lt;OBJECT_TYPE&gt;: Support for &lt;OBJECT_TYPE_DESCRIPTION&gt;&quot; (for example, &quot;TABL: Support for Tables&quot;). Briefly describe why the object is needed and outline the implementation approach.</p></li><li><p>Wait for the OK from abapGit maintainers</p><p>Before starting the implementation, it&#39;s best to wait for feedback from the community. Once you get the go-ahead, the issue will be assigned to you.</p></li></ol><div class="hint-container info"><p class="hint-container-title">Info</p><p>abapGit maintainers will add your issue to a <a href="https://github.com/abapGit/abapGit/issues/5912" target="_blank" rel="noopener noreferrer">central list</a> and, if there&#39;s no further discussion required, close it.</p></div><ol start="3"><li><p>Implement the serializer class</p><p>Follow the instructions below. Often, it makes sense to use an existing serializer class as a template. This can save a lot of work especially if the new object type is similar to others.</p></li></ol>',5)),t("div",m,[e[3]||(e[3]=t("p",{class:"hint-container-title"},"Warning",-1)),t("p",null,[e[1]||(e[1]=i("Your code must comply with the ")),r(a,{to:"/development-guide/read-first/guidelines.html"},{default:s(()=>e[0]||(e[0]=[i("development guidelines")])),_:1}),e[2]||(e[2]=i(" for abapGit. Most notably your code must be compatible with 7.02 ABAP syntax and available standard SAP objects, use prefixing of variables, be pretty-printed, and pass all abaplint checks."))]),e[4]||(e[4]=t("p",null,"You might get lots of abaplint errors. If you are uncertain how to resolve these, maintainers are happy to help.",-1))]),t("ol",f,[e[11]||(e[11]=o('<li><p>Create a test repository</p><p>Define a minimal test case for the new object type and commit it to a test repo in <a href="https://github.com/abapGit-tests" target="_blank" rel="noopener noreferrer">abapGit Test Repositories</a>. If you don&#39;t have access, use the issue you created initially to ask for it. See &quot;Testing&quot; below for an example.</p></li><li><p>Test your implementation</p><p>Perform a complete test cycle with your test repository:</p><ul><li>Create New Online Repo for a local package (for example <code>$TABL</code>)</li><li>Execute a Pull (should install without any diffs)</li><li>Uninstall the repository (should not leave any objects of TADIR entries behind)</li><li>Repeat the process for a transportable package (for example <code>ZTABL</code>)</li></ul></li><li><p>Create a pull request for your implementation</p><p>Fork the abapGit repository and add a branch for your serializer class. Commit your implementation (the <code>zcl_abapgit_object_&lt;type&gt;</code> class) to the branch, and create a pull request to the abapGit repository. Reference your issue in the pull request and add a link to the test repository.</p><p>Note: Object types using the ABAP File Format must be added to the <a href="https://github.com/abapGit/abapGit/blob/d0167ff97dcf6f90ed2721c40d194a5fb34f3ea0/src/objects/aff/zcl_abapgit_aff_registry.clas.abap#L51-L61" target="_blank" rel="noopener noreferrer">AFF Registry</a> as well.</p></li>',3)),t("li",null,[e[10]||(e[10]=t("p",null,"Update documentation",-1)),t("p",null,[e[6]||(e[6]=i("Add the new object type to the ")),r(a,{to:"/user-guide/reference/supported.html"},{default:s(()=>e[5]||(e[5]=[i("list of supported objects")])),_:1}),e[7]||(e[7]=i(". If the object type is using the ABAP File Format (JSON), add a link to the corresponding JSON schema in the ")),e[8]||(e[8]=t("a",{href:"https://github.com/SAP/abap-file-formats",target:"_blank",rel:"noopener noreferrer"},"AFF repository",-1)),e[9]||(e[9]=i("."))])]),e[12]||(e[12]=t("li",null,[t("p",null,"Wait for feedback from and merge by abapGit maintainers"),t("p",null,"One of the maintainers will typically do a code review, run the test themselves, and either provide feedback or merge the pull request.")],-1)),e[13]||(e[13]=t("li",null,[t("p",null,"Completing tasks"),t("p",null,"After a successful merge, abapGit developer and standalone version will support the new object type. Congratulations. Feel free to tell the world about it!")],-1))])])}const y=n(u,[["render",c],["__file","task-list.html.vue"]]),w=JSON.parse(`{"path":"/development-guide/serializers/task-list.html","title":"New Serializers","lang":"en-US","frontmatter":{"title":"New Serializers","category":"serializers","order":30,"description":"Task List for New Serializers The following list includes the mandatory and recommended tasks for adding a new serializer to abapGit: Check Support for New Object Types If the o...","head":[["meta",{"property":"og:url","content":"https://docs.abapgit.org/development-guide/serializers/task-list.html"}],["meta",{"property":"og:site_name","content":"abapGit Docs"}],["meta",{"property":"og:title","content":"New Serializers"}],["meta",{"property":"og:description","content":"Task List for New Serializers The following list includes the mandatory and recommended tasks for adding a new serializer to abapGit: Check Support for New Object Types If the o..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-07-19T20:34:30.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-19T20:34:30.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"New Serializers\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-19T20:34:30.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"abapGit\\",\\"url\\":\\"https://github.com/abapGit\\"}]}"]]},"headers":[{"level":2,"title":"Task List for New Serializers","slug":"task-list-for-new-serializers","link":"#task-list-for-new-serializers","children":[]}],"git":{"createdTime":1689798870000,"updatedTime":1689798870000,"contributors":[{"name":"Marc Bernard","username":"Marc Bernard","email":"59966492+mbtools@users.noreply.github.com","commits":1,"url":"https://github.com/Marc Bernard"}]},"readingTime":{"minutes":1.85,"words":554},"filePathRelative":"development-guide/serializers/task-list.md","localizedDate":"July 19, 2023","autoDesc":true,"excerpt":"<h2>Task List for New Serializers</h2>\\n<p>The following list includes the mandatory and recommended tasks for adding a new serializer to abapGit:</p>\\n<ol>\\n<li>\\n<p>Check <a href=\\"https://github.com/abapGit/abapGit/issues/5912\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Support for New Object Types</a></p>\\n<p>If the object type is listed already (and not implemented), check the corresponding issue. Typically, you will find valuable discussions to continue or previous work to use as a starting point.</p>\\n<p>If the object type is not included in the list, create an <a href=\\"https://github.com/abapGit/abapGit/issues/new\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">issue</a> with the title \\"&lt;OBJECT_TYPE&gt;: Support for &lt;OBJECT_TYPE_DESCRIPTION&gt;\\" (for example, \\"TABL: Support for Tables\\"). Briefly describe why the object is needed and outline the implementation approach.</p>\\n</li>\\n<li>\\n<p>Wait for the OK from abapGit maintainers</p>\\n<p>Before starting the implementation, it's best to wait for feedback from the community. Once you get the go-ahead, the issue will be assigned to you.</p>\\n</li>\\n</ol>"}`);export{y as comp,w as data};
