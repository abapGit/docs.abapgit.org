import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,a as o,o as s}from"./app-Dn8tadOS.js";const r="/img/namespace_example.png",i={};function p(c,e){return s(),t("div",null,e[0]||(e[0]=[o('<p>abapGit supports namespaces. Objects with namespaces can be serialized and deserialized, for example <code>/FOOBAR/REPORT</code> to <code>#foobar#report.prog.abap</code>. The namespace itself is serialized as well, for example <code>/FOOBAR</code> to <code>#foobar#.nspc.xml</code>. This XML-file contains the repair license key for the namespace (but <em>not</em> the developer license key).</p><p>abapGit automatically serializes namespaces and updates existing namespaces when pulling from the repo. If a namespace does not exist in the local system, the namespace can be created by pulling only the namespace object (<code>NSPC</code>). Afterwards, all objects can be pulled as usual.</p><p>Example:</p><figure><img src="'+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>Alternatively, you can create the namespace upfront as follows:</p><ol><li>Create namespace in transaction <code>SE03</code>, namespace role <code>C</code>, and add the repair license</li><li>Open namespace for modifications in <code>SE03</code></li><li>Create namespaced package (optional)</li><li>Clone/pull as usual</li></ol><p>Objects will appear as repaired in the customer system, compare with git source to determine if the objects are modified.</p>',7)]))}const l=a(i,[["render",p],["__file","namespaces.html.vue"]]),d=JSON.parse('{"path":"/user-guide/reference/namespaces.html","title":"Namespaces","lang":"en-US","frontmatter":{"title":"Namespaces","category":"reference","order":70,"description":"abapGit supports namespaces. Objects with namespaces can be serialized and deserialized, for example /FOOBAR/REPORT to #foobar#report.prog.abap. The namespace itself is serializ...","head":[["meta",{"property":"og:url","content":"https://docs.abapgit.org/user-guide/reference/namespaces.html"}],["meta",{"property":"og:site_name","content":"abapGit Docs"}],["meta",{"property":"og:title","content":"Namespaces"}],["meta",{"property":"og:description","content":"abapGit supports namespaces. Objects with namespaces can be serialized and deserialized, for example /FOOBAR/REPORT to #foobar#report.prog.abap. The namespace itself is serializ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://docs.abapgit.org/img/namespace_example.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-05-23T16:02:22.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-23T16:02:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Namespaces\\",\\"image\\":[\\"https://docs.abapgit.org/img/namespace_example.png\\"],\\"dateModified\\":\\"2023-05-23T16:02:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"abapGit\\",\\"url\\":\\"https://github.com/abapGit\\"}]}"]]},"headers":[],"git":{"createdTime":1550575815000,"updatedTime":1684857742000,"contributors":[{"name":"Marc Bernard","username":"Marc Bernard","email":"59966492+mbtools@users.noreply.github.com","commits":3,"url":"https://github.com/Marc Bernard"},{"name":"Ludwig Stockbauer-Muhr","username":"Ludwig Stockbauer-Muhr","email":"35834861+stockbal@users.noreply.github.com","commits":1,"url":"https://github.com/Ludwig Stockbauer-Muhr"},{"name":"Lars Hvam","username":"Lars Hvam","email":"larshp@hotmail.com","commits":2,"url":"https://github.com/Lars Hvam"},{"name":"Jaime Rodriguez Capote","username":"Jaime Rodriguez Capote","email":"jrodriguez@resultoconsultoria.com","commits":1,"url":"https://github.com/Jaime Rodriguez Capote"}]},"readingTime":{"minutes":0.54,"words":161},"filePathRelative":"user-guide/reference/namespaces.md","localizedDate":"February 19, 2019","autoDesc":true,"excerpt":"<p>abapGit supports namespaces. Objects with namespaces can be serialized and deserialized, for example <code>/FOOBAR/REPORT</code> to <code>#foobar#report.prog.abap</code>. The namespace itself is serialized as well, for example <code>/FOOBAR</code> to <code>#foobar#.nspc.xml</code>. This XML-file contains the repair license key for the namespace (but <em>not</em> the developer license key).</p>"}');export{l as comp,d as data};
